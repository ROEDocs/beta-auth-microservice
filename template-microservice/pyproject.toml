[tool.uv]
# For managing dependencies using uv (replaces requirements.txt implicitly)

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "template-microservice"
version = "0.1.0"
description = "Template for FastAPI microservices with shared authentication patterns."
readme = "README.md"
requires-python = ">=3.11" # Ensure compatibility with modern FastAPI/Pydantic
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License", # Choose your license
    "Operating System :: OS Independent",
    "Framework :: FastAPI",
]
dependencies = [
    "fastapi>=0.111,<0.116", # Keep versions aligned or use ranges
    "uvicorn[standard]>=0.29,<0.35", # Includes standard extras like watchfiles
    "pydantic>=2.6,<2.12",
    "pydantic-settings>=2.1,<2.10",
    "python-dotenv>=1.0,<1.2",
    # "company-auth-lib @ git+ssh://git@github.com/your-org/company-auth-lib.git@main", # Example: Placeholder for your shared auth library
    # OR
    # "company-auth-lib", # If published to PyPI/private index
]

[project.optional-dependencies]
test = [
    "pytest>=7.0,<9.0",
    "httpx>=0.27,<0.29", # For testing FastAPI async clients
]

[tool.ruff]
line-length = 88 # Example: Align with Black's default
select = ["E", "F", "W", "I", "UP"] # Example: Enable standard checks + isort + pyupgrade
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint.isort]
known-first-party = ["app"] # Tell isort about your 'app' module 